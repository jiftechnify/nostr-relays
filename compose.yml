services:
  whitelisted_relay:
    build:
      context: ./whitelisted/sifter
      dockerfile: ./Dockerfile
    container_name: strfry_whitelisted_relay
    command: --config=config/relay.conf relay 
    volumes:
      - ./whitelisted/config:/app/config
      - ./whitelisted/resource:${RESOURCE_DIR}
      - ${STRFRY_DB}/whitelisted:/app/strfry-db
      - /usr/share/zoneinfo/Asia/Tokyo:/etc/localtime:ro
    env_file:
      - ./whitelisted/.env
    networks:
      - nostr_relays
    pid: host
    depends_on:
      whitelisted_follow_check_api:
        condition: service_healthy
    restart: unless-stopped

  whitelisted_router:
    build:
      context: ./whitelisted/sifter
      dockerfile: ./Dockerfile
    container_name: strfry_whitelisted_router
    command: --config=config/relay.conf router config/router.conf
    volumes:
      - ./whitelisted/config:/app/config
      - ./whitelisted/resource:${RESOURCE_DIR}
      - ${STRFRY_DB}/whitelisted:/app/strfry-db
      - /usr/share/zoneinfo/Asia/Tokyo:/etc/localtime:ro
    env_file:
      - ./whitelisted/.env
    networks:
      - nostr_relays
    pid: host
    depends_on:
      whitelisted_follow_check_api:
        condition: service_healthy
    restart: unless-stopped

  whitelisted_follow_check_api:
    build:
      context: ./whitelisted/follow_check_api
      dockerfile: ./Dockerfile
    container_name: whitelisted_follow_check_api
    ports:
      - 127.0.0.1:8080:8080
    volumes:
      - ./whitelisted/resource:${RESOURCE_DIR}
    environment:
      - TZ=Asia/Tokyo
    env_file:
      - ./whitelisted/.env
    networks:
      - nostr_relays
    healthcheck:
      test: "wget --quiet --spider http://localhost:8080/health || exit 1"
      start_period: 10s
      interval: 30s
      timeout: 3s
      retries: 2
    restart: unless-stopped

  jp_relay:
    image: dockurr/strfry:1.0.1
    container_name: strfry_jp_relay
    command: "/app/strfry --config=config/relay.conf relay"
    volumes:
      - ./jp/config:/app/config
      - ${STRFRY_DB}/jp:/app/strfry-db
      - /usr/share/zoneinfo/Asia/Tokyo:/etc/localtime:ro
    pid: host
    networks:
      - nostr_relays
    restart: unless-stopped

  shiritori_relay:
    build:
      context: ./shiritori/sifter
      dockerfile: ./Dockerfile
    container_name: strfry_shiritori_relay
    command: --config=config/relay.conf relay
    volumes:
      - ./shiritori/config:/app/config
      - ./shiritori/resource:${RESOURCE_DIR}
      - ${STRFRY_DB}/shiritori:/app/strfry-db
      - /usr/share/zoneinfo/Asia/Tokyo:/etc/localtime:ro
    environment:
      - RESOURCE_DIR
    env_file:
      - ./shiritori/.env
    pid: host
    networks:
      - nostr_relays
    restart: unless-stopped
    healthcheck:
      test: "wget --quiet --spider http://127.0.0.1:7777 || exit 1"
      interval: 5s
      timeout: 3s
      start_period: 5s
      retries: 3

  shiritori_router:
    build:
      context: ./shiritori/sifter
      dockerfile: ./Dockerfile
    container_name: strfry_shiritori_router
    command: --config=config/relay.conf router config/router.conf
    volumes:
      - ./shiritori/config:/app/config
      - ./shiritori/resource:${RESOURCE_DIR}
      - ${STRFRY_DB}/shiritori:/app/strfry-db
      - /usr/share/zoneinfo/Asia/Tokyo:/etc/localtime:ro
    environment:
      - RESOURCE_DIR
    env_file:
      - ./shiritori/.env
    pid: host
    networks:
      - nostr_relays
    restart: unless-stopped

  shiritori_ritrin:
    build:
      context: ./shiritori/ritrin
      dockerfile: ./Dockerfile
    container_name: shiritori_ritrin
    volumes:
      - ./shiritori/resource:${RESOURCE_DIR}
    environment:
      - RESOURCE_DIR
    env_file:
      - ./shiritori/.env
    networks:
      - nostr_relays
    depends_on:
      shiritori_relay:
        condition: service_healthy
    restart: unless-stopped
      
  shiritori_yomi_api:
    build:
      context: ./shiritori/yomi-api
      dockerfile: ./Dockerfile
    container_name: shiritori_yomi_api
    ports:
      - "127.0.0.1:8081:8080"
    networks:
      - nostr_relays
    restart: unless-stopped

  caddy_nostr_relays:
    image: caddy:2.7.5
    container_name: caddy_nostr_relays
    volumes:
      - ./caddy:/etc/caddy
      - ./shiritori/nozokimado/dist:/srv/shiritori
      - caddy_data:/data
      - caddy_config:/config
      - /usr/share/zoneinfo/Asia/Tokyo:/etc/localtime:ro
    networks:
      - nostr_relays
    restart: unless-stopped

volumes:
  caddy_data:
  caddy_config:

networks:
  nostr_relays:
    external: true
